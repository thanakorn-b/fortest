{"version":3,"sources":["App.tsx","index.tsx"],"names":["TopBar","styled","div","TopBarFont","Body","Content","Button","button","FontButton","Memo","MemoText","input","App","API_HOST","useState","memos","setMemos","useEffect","fetch","method","mode","then","response","json","data","onClick","dataChange","moment","format","headers","body","JSON","stringify","catch","error","console","log","map","memo","i","utils","MomentUtils","DateTimePicker","value","pub_date","onChange","e","event","id","handleOnChangeTime","description","target","handleOnChangeText","deleteMemo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6141985.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport {\n  DateTimePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\n\nconst TopBar = styled.div`\n  background-color: #505668;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  position: absolute;\n`;\n\nconst TopBarFont = styled.div`\n  margin-top: 10px;\n  font-size: 24px;\n  color: #f1ece1;\n`;\n\nconst Body = styled.div`\n  background-color: whitesmoke;\n  background-image: url('https://get.pxhere.com/photo/desk-notebook-writing-table-book-pen-diary-journal-writer-paper-education-brand-document-knowledge-pen-and-paper-611823.jpg');\n  background-size: cover;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Content = styled.div`\n  margin-top: 50px;\n  padding: 10px 20px;\n  background-color: #ecd596;\n  height: 100vh;\n  width: 382px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 1px 2px 8px 2px #2c2c2c;\n  overflow: scroll;\n`;\n\nconst Button = styled.button`\n  background-color: #c05805;\n  color: #f1ece1;\n  padding: 10px 40px;\n  border-color: transparent;\n  border-radius: 5px;\n  &:Hover {\n    background-color: #505668;\n  }\n  /* box-shadow: 1px 3px 8px 5px #888888; */\n`;\n\nconst FontButton = styled.div`\n  font-size: 20px;\n`;\n\nconst Memo = styled.div`\n  margin: 10px;\n  align-items: center;\n  display: flex;\n  /* padding-bottom: 5px;\n  border: 1px solid;\n  border-color: transparent;\n  border-bottom-color: #303030; */\n`;\n\nconst MemoText = styled.input`\n  margin: 0px 10px;\n  background-color: transparent;\n  border: 1px solid;\n  border-color: transparent;\n  border-bottom-color: #949494;\n  height: 28px;\n  &:hover {\n    border: 1px solid;\n    border-color: transparent;\n    border-bottom-color: #3a3a3a;\n  }\n`;\n\ninterface Memos {\n  id: number;\n  description: string;\n  date: string;\n  time: string;\n  pub_date: Date;\n};\n\nfunction App() {\n  const API_HOST = 'http://52.221.201.253:8000/';\n  const [memos, setMemos] = useState<Memos[]>([]);\n\n  useEffect(() => {\n    fetch(`${API_HOST}history/`, {\n      method: 'GET',\n      mode: 'no-cors',\n    }).then(response => response.json())\n      .then(data => setMemos(data));\n  }, []);\n\n  const handleOnChangeText = (event: any, memo: any) => { //OK\n    var dataChange = {\n      \"description\": `${event.target.value}`\n    };\n    fetch(`${API_HOST}history/historyUpdate/${memo.id}/`, {\n      method: 'POST',\n      mode: 'no-cors',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(dataChange)\n    })\n      .then(response => response.json())\n      .then(data => {\n        fetch(`${API_HOST}history/`, {\n          method: 'GET',\n          mode: 'no-cors',\n        }).then(response => response.json())\n          .then(data => setMemos(data))\n      })\n      .catch(error => console.log(error))\n  };\n\n  const AddMemo = () => {\n    var dataChange = {\n      \"description\": ``,\n      \"date\": `${moment().format('M-D')}`,\n      \"time\": `${moment().format('H:m')}`,\n      \"pub_date\": `${moment().format()}`\n    };\n    fetch(`${API_HOST}history/historyCreate/`, {\n      method: 'POST',\n      mode: 'no-cors',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(dataChange)\n    })\n      .then(response => response.json())\n      .then(data => {\n        fetch(`${API_HOST}history/`, {\n          method: 'GET',\n          mode: 'no-cors',\n        }).then(response => response.json())\n          .then(data => setMemos(data))\n      })\n      .catch(error => console.log(error));\n  };\n\n  const deleteMemo = (memo: any) => {\n    fetch(`${API_HOST}history/historyDelete/${memo.id}/`, {\n      method: 'DELETE',\n      mode: 'no-cors',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      }\n    })\n      .then(response => response.json())\n      .then(data => {\n        fetch(`${API_HOST}history/`, {\n          method: 'GET',\n          mode: 'no-cors',\n        }).then(response => response.json())\n          .then(data => setMemos(data))\n      })\n      .catch(error => console.log(error))\n  };\n\n  const handleOnChangeTime = (event: any, memo: any) => {\n    var dataChange = {\n      \"pub_date\": `${event.format()}`\n    };\n    fetch(`${API_HOST}history/historyUpdate/${memo.id}/`, {\n      method: 'POST',\n      mode: 'no-cors',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(dataChange)\n    })\n      .then(response => response.json())\n      .then(data => {\n        fetch(`${API_HOST}history/`, {\n          method: 'GET',\n          mode: 'no-cors',\n        }).then(response => response.json())\n          .then(data => setMemos(data))\n      })\n      .catch(error => console.log(error))\n  }\n\n  return (\n    <div >\n      <TopBar>\n        <TopBarFont>Daily Routine</TopBarFont>\n      </TopBar>\n      <Body>\n        <Content>\n          <Button onClick={AddMemo}>\n            <FontButton>Add list</FontButton>\n          </Button>\n          <div>\n            {memos.map((memo, i) =>\n              <Memo key={i}>\n                <MuiPickersUtilsProvider utils={MomentUtils}>\n                  <DateTimePicker\n                    value={memo.pub_date}\n                    onChange={e => handleOnChangeTime(e, memo)}\n                    format=\"YYYY-MM-DD HH:mm\"\n                  // inputVariant= \"outlined\"\n                  />\n                </MuiPickersUtilsProvider>\n                <MemoText value={memo.description} onChange={e => handleOnChangeText(e, memo)}></MemoText>\n                <button onClick={() => deleteMemo(memo)}>X</button>\n              </Memo>\n            )}\n          </div>\n          {/* <button onClick={() => time}>CheckTable</button> */}\n        </Content>\n      </Body>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}